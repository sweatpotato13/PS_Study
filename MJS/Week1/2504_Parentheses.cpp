/*
   4. https://www.acmicpc.net/problem/2504
   괄호의 값
*/

/*
   4개의 기호 ‘(’, ‘)’, ‘[’, ‘]’를 이용해서 만들어지는 괄호열 중에서 올바른 괄호열이란 다음과 같이 정의된다.

   한 쌍의 괄호로만 이루어진 ‘()’와 ‘[]’는 올바른 괄호열이다.
   만일 X가 올바른 괄호열이면 ‘(X)’이나 ‘[X]’도 모두 올바른 괄호열이 된다.
   X와 Y 모두 올바른 괄호열이라면 이들을 결합한 XY도 올바른 괄호열이 된다.
   예를 들어 ‘(()[[]])’나 ‘(())[][]’ 는 올바른 괄호열이지만 ‘([)]’ 나 ‘(()()[]’ 은 모두 올바른 괄호열이 아니다. 우리는 어떤 올바른 괄호열 X에 대하여 그 괄호열의 값(괄호값)을 아래와 같이 정의하고 값(X)로 표시한다.

   ‘()’ 인 괄호열의 값은 2이다.
   ‘[]’ 인 괄호열의 값은 3이다.
   ‘(X)’ 의 괄호값은 2×값(X) 으로 계산된다.
   ‘[X]’ 의 괄호값은 3×값(X) 으로 계산된다.
   올바른 괄호열 X와 Y가 결합된 XY의 괄호값은 값(XY)= 값(X)+값(Y) 로 계산된다.
   예를 들어 ‘(()[[]])([])’ 의 괄호값을 구해보자.  ‘()[[]]’ 의 괄호값이 2 + 3×3=11 이므로  ‘(()[[ ]])’의 괄호값은 2×11=22 이다. 그리고  ‘([])’의 값은 2×3=6 이므로 전체 괄호열의 값은 22 + 6 = 28 이다.

   여러분이 풀어야 할 문제는 주어진 괄호열을 읽고 그 괄호값을 앞에서 정의한대로 계산하여 출력하는 것이다.
*/

/*
   입력
   첫째 줄에 괄호열을 나타내는 문자열(스트링)이 주어진다. 단 그 길이는 1 이상, 30 이하이다.

   출력
   첫째 줄에 그 괄호열의 값을 나타내는 정수를 출력한다. 만일 입력이 올바르지 못한 괄호열이면 반드시 0을 출력해야 한다.
*/

#pragma warning(disable:4996)

#include <iostream>
#include <cstring>
#include <stack>

using namespace std;
/*
- stack<int> st : 디폴트 컨테이너 deque<int>를 사용하여 stack 컨테이너 객체를 생성한다.
- stack<int, vector<int>> st : vector 컨테이너를 적용한 정수를 저장하는 stack 컨테이너를 생성한다.
- st.push(x) : 스택에 데이터 x를 입력한다.
- st.pop() : 스택의 데이터를 삭제한다.
- st.top() : 스택의 데이터를 반환한다.
- st.empty() : 스택이 비어있는지 판단한다.
*/
int main(void) {
    string str;
	int sum = 0;
	stack<char> st;

	cin >> str;

    if (str.length() % 2 != 0) {
        cout << 0;
        return 0;
    }

    for (int i = 0; i < str.length(); i++) {
        st.push(str[i]);
    }

    while (!st.empty()) {
        if (st.top() != '[' && st.top() != ']'
            && st.top() != '(' && st.top() != ')') {
            cout << 0;
            return 0;
        }
        st.pop();
    }

    for (int i = 0; i < str.length(); i++) {
        st.push(str[i]);
        if()
    }

	return 0;
}